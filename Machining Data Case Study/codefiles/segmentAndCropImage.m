function [BW,outCrop,rect_coords] = segmentAndCropImage(RGB,methodArg,methodVal,gdcf)
%segmentImage Segment image using auto-generated code from imageSegmenter app
%  [BW,MASKEDIMAGE] = segmentImage(RGB) segments image RGB using
%  auto-generated code from the imageSegmenter app. The final segmentation
%  is returned in BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 15-Jan-2020
%----------------------------------------------------

% Convert RGB image into L*a*b* color space.
%RGB = imcrop(RGB,[200,200,900,900]);
X = rgb2lab(RGB);
% pre-crop some black space around the image
% Create empty mask.
BW = false(size(X,1),size(X,2));
imageMask = BW;


if isempty(methodVal)
    methodVal = 0.02;
end

if isempty(gdcf)
    methodVal = 10;
end


if strcmp(methodArg,'segmentation')
% Local graph cut
xPos = [492.9812 1326.0639 1326.0639 492.9812 ];
yPos = [444.8609 444.8609 971.1767 971.1767 ];
m = size(BW, 1);
n = size(BW, 2);
ROI = poly2mask(xPos,yPos,m,n);
foregroundInd = [];
backgroundInd = [];
L = superpixels(X,4132,'IsInputLab',true);

% Convert L*a*b* range to [0 1]
scaledX = prepLab(X);
BW = BW | grabcut(scaledX,L,ROI,foregroundInd,backgroundInd);

% Create masked image.
imageMask = RGB;
imageMask(repmat(~BW,[1 1 3])) = 0;

elseif strcmp(methodArg,'fast')
    I = rgb2gray(X); 
    imageMask = true(size(I));
    imageMask(200,200,:) = false;
    W = graydiffweight(I,imageMask,'GrayDifferenceCutoff',gdcf);
    [BW,D] = imsegfmm(W,imageMask,methodVal);
else
    %maskedImage(200,200) = true;
    I = rgb2gray(X);
    %W = graydiffweight(I,maskedImage,'GrayDifferenceCutoff',10);
    [BW,threshold] = edge(I,methodArg,methodVal);
    imageMask = bwpropfilt(BW,'Solidity',[1]);
end

% filter the areas keeping the largest 1
%BW = ~BW;
    imageMask = bwpropfilt(BW,'Solidity',[1]);
 % measure the bounding box surrounding the foreground, i.e. the region
 % of interest
labeledImage = bwlabel(imageMask);
measurements = regionprops(labeledImage,'BoundingBox');

bbA = measurements.BoundingBox;
    hStart = bbA(1);
    vStart = bbA(2);
    hHeight = 800;
    hWidth = 800;
    
%     if bbA(2) >= 300
%         vShift = 0;
%         hShift = 0;
%         vPad = 0;
%         hPad = 0;
%     end
    
    bbN = [hStart+100, vStart-200, hWidth, hHeight];
    
    outCrop = imcrop(RGB,bbN);
    BW = imcrop(BW,bbN);
    rect_coords = bbN;
end

function out = prepLab(in)

% Convert L*a*b* image to range [0,1]
out = in;
out(:,:,1) = in(:,:,1) / 100;  % L range is [0 100].
out(:,:,2) = (in(:,:,2) + 86.1827) / 184.4170;  % a* range is [-86.1827,98.2343].
out(:,:,3) = (in(:,:,3) + 107.8602) / 202.3382;  % b* range is [-107.8602,94.4780].

end
